buildscript {
    repositories {
        maven {
            url "http://repo.biocodellc.com/repository/maven-private/"
            credentials {
                username mavenUser
                password mavenPass
            }
        }
        mavenLocal()
    }
    dependencies {
        classpath "org.biocode:gradle-fims:1.1.6"
    }
}

apply plugin: "application"
apply plugin: "org.biocode.fims-web"


fims {
    maven {
        username mavenUser
        password mavenPass
    }
}

repositories {
    add(fims.mavenFims())
    mavenLocal()
}

dependencies {
    server group: 'org.springframework', name: 'spring-web', version: '4.3.4.RELEASE'
    server('org.glassfish.jersey.ext:jersey-spring3:2.25') {
        exclude module: 'bean-validator'
        exclude module: 'asm-all-repackaged'
    }

    // the next 2 are to fix the excluded modules above
    server group: 'org.glassfish.hk2.external', name: 'asm-all-repackaged', version: '2.5.0-b04'
    server 'org.glassfish.jersey.ext:jersey-bean-validation:2.25'

    server 'org.glassfish.jersey.media:jersey-media-json-jackson:2.25'
    server group: 'org.postgresql', name: 'postgresql', version: '42.0.0'
    server 'org.springframework.data:spring-data-jpa:1.10.1.RELEASE'
    server 'org.hibernate:hibernate-entitymanager:5.1.0.Final'
    server 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.8.6'
    server group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: '2.8.9'
    server 'org.slf4j:slf4j-log4j12:1.7.19'
    server 'commons-validator:commons-validator:1.5.0'
    server 'com.sun.mail:javax.mail:1.5.5'
    server 'commons-lang:commons-lang:2.6'
    server 'org.apache.httpcomponents:httpcore:4.2.1'
    server 'org.apache.httpcomponents:httpclient:4.2.1'

    provided 'org.eclipse.jetty:jetty-servlet:9.3.3.v20150827'

    testCompile "junit:junit-dep:4.10"
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.4.RELEASE'
}

//=============================
//= ssh configuration
//=============================

//// jetty ssh plugin
//remotes {
//    biscicol {
//        host = 'biscicol.org'
//        user = biscicolUser
//        identity = file(identityFile)
//    }
//}

//=============================
//= application configuration
//=============================

task registerClient(type: JavaExec) {
    classpath = configurations.server + configurations.compile + sourceSets.main.runtimeClasspath

    main = "org.biocode.bcid.run.ClientRegister"
}

task ezidUpdate(type: JavaExec) {
    classpath = configurations.server + configurations.compile + sourceSets.main.runtimeClasspath

    main = "org.biocode.bcid.run.EzidUpdator"
}

//=============================
//= deployment configuration
//=============================

//updateDependencies {
//    remote = remotes.biscicol
//    location = remoteLibsDirectory
//}

//updateDependenciesDev {
//    remote = remotes.biscicol
//    location = remoteDevLibsDirectory
//}

//deployFims {
//    remote = remotes.biscicol
//    remoteLibsDir = remoteLibsDirectory
//    remoteWarDir = remoteWarDirectory
//}

//deployFimsDev {
//    remote = remotes.biscicol
//    remoteLibsDir = remoteDevLibsDirectory
//    remoteWarDir = remoteWarDevDirectory
//}

deployFimsLocal {
    deployDir = localWarDirectory
}
