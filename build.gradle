plugins {
    id 'java'
    id 'war'
}

repositories {
    mavenCentral()
}


apply plugin: "application"


def SPRING_VERSION = '4.3.9.RELEASE'
dependencies {
    compile group: 'org.springframework', name: 'spring-web', version: SPRING_VERSION
    compile group: 'org.springframework', name: 'spring-jdbc', version: SPRING_VERSION
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.18'
    compile('org.glassfish.jersey.ext:jersey-spring3:2.25') {
        exclude module: 'bean-validator'
        exclude module: 'asm-all-repackaged'
    }

    // the next 2 are to fix the excluded modules above
    compile group: 'org.glassfish.hk2.external', name: 'asm-all-repackaged', version: '2.5.0-b04'
    compile 'org.glassfish.jersey.ext:jersey-bean-validation:2.25'

    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.25'
    implementation 'org.postgresql:postgresql:42.6.0'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: '2.8.9'
    compile 'org.slf4j:slf4j-log4j12:1.7.19'
    compile 'commons-validator:commons-validator:1.5.0'
    compile 'com.sun.mail:javax.mail:1.5.5'
    compile 'commons-lang:commons-lang:2.6'
    compile 'org.apache.httpcomponents:httpcore:4.2.1'
    compile 'org.apache.httpcomponents:httpclient:4.2.1'

    compile 'org.eclipse.jetty:jetty-servlet:9.3.3.v20150827'

    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.11'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.2.11'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.2.11'

    testCompile "junit:junit-dep:4.10"
    testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION
}

//=============================
//= application configuration
//=============================
mainClassName = ''


startScripts {
    classpath = files(jar.archivePath, configurations.compile, configurations.runtime)
}

task copyEnvironmentProps(type: Copy) {
    from('src/main/environment/' + project.findProperty("environment")) {
        include '**/*.properties'
        include '**/*.props'
    }
    into 'build/resources/main'
}

tasks.war.dependsOn("copyEnvironmentProps")
tasks["copyEnvironmentProps"].dependsOn("processResources")


war {
    enabled = true
    webXml = file('src/main/environment/' + project.findProperty("environment") + '/web.xml')
}


